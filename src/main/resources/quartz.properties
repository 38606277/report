# Default Properties file for use by StdSchedulerFactory
# to create a Quartz Scheduler Instance, if a different
# properties file is not explicitly specified.
#

#集群配置
# 如果使用集群，instanceId必须唯一,设置成AUTO
org.quartz.scheduler.instanceId = AUTO
#是否使用集群 为 true 才是使用集群
org.quartz.jobStore.isClustered = false
#默认配置，数据保存到内存 ,
#org.quartz.jobStore.class: org.quartz.simpl.RAMJobStore

# jobStrore 持久化配置 ， 使用集群的话，要配合数据使用  ,使用JobStoreTX也就是数据库方式
org.quartz.jobStore.class:org.quartz.impl.jdbcjobstore.JobStoreTX
org.quartz.jobStore.driverDelegateClass:org.quartz.impl.jdbcjobstore.StdJDBCDelegate
# 使用 quartz.properties 的配置,不使用默认的配置
org.quartz.jobStore.useProperties:true
#数据库表前缀  *** 一定要记得设计这些表 ，这是 doc 文档当中的11张表，看起是否需要大写成 QRTZ_，可以用小写，mysql数据库不区分
org.quartz.jobStore.tablePrefix:qrtz_
# 在本文件中 命名数据源的名称
org.quartz.jobStore.dataSource:qzDS

#JDBC驱动
org.quartz.dataSource.qzDS.driver:com.mysql.jdbc.Driver
org.quartz.dataSource.qzDS.URL:jdbc:mysql://localhost:3306/form?serverTimezone=UTC&useSSL=true&useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&rewriteBatchedStatements=true
org.quartz.dataSource.qzDS.user:root
org.quartz.dataSource.qzDS.password:root
#org.quartz.dataSource.qzDS.maxConnection:10

# 调度器名称
org.quartz.scheduler.instanceName: PccwScheduler
org.quartz.scheduler.rmi.export: false
org.quartz.scheduler.rmi.proxy: false
org.quartz.scheduler.wrapJobExecutionInUserTransaction: false

#x线程池的配置
org.quartz.threadPool.class: org.quartz.simpl.SimpleThreadPool
# 线程池数量
org.quartz.threadPool.threadCount: 10
# 任务的优先级
org.quartz.threadPool.threadPriority: 5
org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread: true
org.quartz.jobStore.misfireThreshold: 60000

#============================================================================
# Configure JobStore
#============================================================================


#============================================================================
# Configure Datasources
#============================================================================
