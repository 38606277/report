<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="query">

    <!-- 让此SQL能返回自增长主键 -->
    <insert id="createQueryName" parameterType="Map"  useGeneratedKeys="true" keyProperty="id">
        INSERT INTO qry_name(class_id,qry_name,qry_desc,qry_type,qry_file,qry_db,qry_sql)
        VALUES ('${class_id}', '${qry_name}',
        <if  test="qry_desc == null">NULL</if>
        <if  test="qry_desc != null">'${qry_desc}'</if>
        ,
        <if  test="qry_type == null">NULL</if>
        <if  test="qry_type != null">'${qry_type}'</if>
        ,
        <if  test="qry_file == null">NULL</if>
        <if  test="qry_file != null">'${qry_file}'</if>
        ,
        <if  test="qry_db == null">NULL</if>
        <if  test="qry_db != null">'${qry_db}'</if>
        ,
        <if  test="qry_sql == null">NULL</if>
        <if  test="qry_sql != null">'${qry_sql}'</if>
        )
    </insert>

    <!--  插入数据到query_in表-->
    <insert id="createQueryIn" parameterType="Map">
        INSERT INTO qry_in
        (qry_id,in_id,in_name,datatype,dict_id,validate,default_value,authtype_id)
        VALUES (
        <if  test="qry_id != null">#{qry_id,jdbcType=INTEGER}</if>,
        '${in_id}', '${in_name}', '${datatype}',
        <if  test="dict_id == null or dict_id == ''">NULL</if>
        <if  test="dict_id != null and dict_id != ''">#{dict_id,jdbcType=INTEGER}</if>
        ,
        <if  test="validate == null">NULL</if>
        <if  test="validate != null">'${validate}'</if>
        ,
        <if  test="default_value == null">NULL</if>
        <if  test="default_value != null">'${default_value}'</if>
        ,
        <if  test="authtype_id == null">NULL</if>
        <if  test="authtype_id != null">'${authtype_id}'</if>
        )
    </insert>

    <!-- 往 query_out表中插入数据 -->
    <insert id="createQueryOut" parameterType="Map">

        INSERT INTO qry_out
        (qry_id,out_id,out_name,datatype,link,width,render)
        VALUES (
        <if  test="qry_id != null">#{qry_id,jdbcType=INTEGER}</if>,
        '${out_id}', '${out_name}',
        <if  test="datatype == null">NULL</if>
        <if  test="datatype != null">'${datatype}'</if>
        ,
        <if  test="link == null">NULL</if>
        <if  test="link != null">'${link}'</if>
        ,
        <if  test="width == null">NULL</if>
        <if  test="width != null">#{width,jdbcType=DOUBLE}</if>
        ,
        <if  test="render == null">NULL</if>
        <if  test="render != null">'${render}'</if>
        )

    </insert>

    <!-- 修改qry_name表当中的记录 -->
    <update id="updateQueryName" parameterType="Map" >
        update qry_name set
        class_id='${class_id}',qry_name=
        <if  test="qry_name == null">NULL</if>
        <if  test="qry_name != null">'${qry_name}'</if>
        ,qry_desc=
        <if  test="qry_desc == null">NULL</if>
        <if  test="qry_desc != null">'${qry_desc}'</if>
        ,qry_type=
        <if  test="qry_type == null">NULL</if>
        <if  test="qry_type != null">'${qry_type}'</if>
        ,qry_db=
        <if  test="qry_db == null">NULL</if>
        <if  test="qry_db != null">'${qry_db}'</if>
        ,qry_file=
        <if  test="qry_file == null">NULL</if>
        <if  test="qry_file != null">'${qry_file}'</if>
        where qry_id=#{qry_id,jdbcType=INTEGER}
    </update>

    <!--  删除query_in表当中的一条数据 -->
    <delete id="deleteQueryIn" parameterType="Map">
		delete from qry_in where qry_id=#{qry_id,jdbcType=INTEGER} and in_id='${in_id}'
    </delete>

    <!--查询函数输出参数表-->
    <delete id="deleteQueryOut" parameterType="int">
		delete from qry_out where qry_id=#{qry_id,jdbcType=INTEGER} and out_id='${out_id}'
    </delete>

    <!--删除 qry_name -->
    <delete id="deleteQueryName" parameterType="int">
		delete from  qry_name
		where qry_id=#{qry_id,jdbcType=INTEGER}
    </delete>

    <!--删除函数输入参数表数据-->
    <delete id="deleteQueryInByFuncId" parameterType="int">
		delete from qry_in where qry_id=#{qry_id,jdbcType=INTEGER}
    </delete>

    <!--查询函数输出参数表-->
    <delete id="deleteQueryOutByFuncId" parameterType="int">
		delete from qry_out where qry_id=#{qry_id,jdbcType=INTEGER}
    </delete>

    <!-- 往query_class表中新增一条记录 -->
    <insert id="createQueryClass" parameterType="String">
		insert into qry_class(class_name) values('${_parameter}')
	</insert>

    <select id="getQueryInfoRelationClass" parameterType="int" resultType="int">
        select count(1) from qry_name where class_id=#{class_id,jdbcType=INTEGER}
    </select>

    <delete id="deleteQueryClass"  parameterType="int">
		delete from qry_class where class_id=#{class_id}
	</delete>

    <update id="updateQueryClass"  parameterType="Map">
		update qry_class set class_name='${class_name}' where class_id=#{class_id};
	</update>

    <!-- 根据qry_id查询qry_name跟qry_class信息  -->
    <select id="getNameByID" parameterType="Map" resultType="Map">
		SELECT
			qn.qry_id ,
			qn.qry_name ,
			qn.qry_desc ,
		    qc.class_id,
			qc.class_name ,
			qn.qry_type ,
			qn.qry_file,
			qn.qry_db,
		    qn.qry_sql
		FROM
			qry_name qn ,
			qry_class qc
		WHERE
			qc.class_id = qn.class_id
		and qn.qry_id = ${qry_id}
	</select>

    <!-- 根据qry_id查询qry_in信息 TODO:是否含有 func_dict qry_dict表 fnd_authtype qry_authtype表？ -->
    <select id="getInByID" parameterType="Map" resultType="Map">
		SELECT
			qi.qry_id ,
			qi.in_id ,
			qi.in_name ,
			qi.datatype ,
			qi.dict_id ,
			fd.dict_name ,
			qi.validate ,
			qi.authtype_id ,
			fat.authtype_desc
		FROM
			qry_in qi
			LEFT JOIN func_dict fd ON qi.dict_id = fd.dict_id
			LEFT JOIN fnd_authtype fat ON qi.authtype_id = fat.authtype_id
		WHERE
			qi.qry_id =  ${qry_id}
	</select>

    <!--查我函数名称-->
    <select id="getOutByID" parameterType="Map" resultType="Map">
		SELECT
			qo.qry_id ,
			qo.out_id ,
			qo.out_name ,
		    qo.datatype,
			qo.link,
			qo.width,
			qo.render
		FROM
			qry_out qo
		WHERE
			qo.qry_id =${qry_id}
	</select>

    <!--查我函数名称-->
    <select id="getAllQueryName" parameterType="Map" resultType="Map">
        SELECT
            qry.qry_id,
            qry.qry_name,
            qry.qry_desc,
            qc.class_id,
            qc.class_name,
            qry.qry_type,
            qry.qry_file,
            qry.qry_db,
            qry.qry_sql
        FROM
            qry_name qry,
            qry_class qc
        WHERE
            qc.class_id = qry.class_id
    </select>

    <!--查我函数名称-->
    <!--查我函数类别-->
    <select id="getAllQueryClass" parameterType="Map" resultType="Map">
		SELECT
		 qry.class_id ,
		 qry.class_name
		FROM
		  qry_class qry
	</select>

    <!-- 根据 class_id 查询 func_name的所有信息 -->
    <select id="getQueryNameInfoByClassID" parameterType="int" resultType="Map">
		SELECT
			qry.qry_id,
			qry.qry_name,
			qry.qry_desc,
		    qc.class_id,
			qc.class_name,
			qry.qry_type,
			qry.qry_db,
		    qry.qry_sql,
		    qry.qry_file
		FROM
			qry_name qry,
			qry_class qc
		WHERE
		    qc.class_id = #{class_id,jdbcType=INTEGER}
		and qc.class_id = qry.class_id
	</select>

</mapper>